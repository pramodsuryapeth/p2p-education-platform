<!DOCTYPE html>
<html lang="en">
<head>
  <meta charset="UTF-8">
  <title><%= course.courseTitle %> | View Course</title>
  <link href="https://cdn.jsdelivr.net/npm/tailwindcss@2.2.19/dist/tailwind.min.css" rel="stylesheet">
  <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.4.0/css/all.min.css">
  <style>
    .progress-ring { transition: stroke-dashoffset 0.3s; }
    .video-card { transition: all 0.3s ease; }
    .video-card:hover { transform: translateY(-5px); box-shadow: 0 10px 25px -5px rgba(0,0,0,0.1); }
    .active-video { border-left: 4px solid #3b82f6; background-color: #eff6ff; }
    .star-rating { display: inline-flex; flex-direction: row-reverse; justify-content: flex-end; }
    .star-rating input { display: none; }
    .star-rating label { cursor: pointer; color: #d1d5db; font-size: 1.5rem; padding: 0 0.1rem; transition: color 0.2s; }
    .star-rating input:checked ~ label, .star-rating label:hover, .star-rating label:hover ~ label { color: #fbbf24; }
    .star-rating input:checked + label { color: #f59e0b; }
    .rating-bar { transition: width 0.5s ease-in-out; }
    
    /* Floating button styles */
    .floating-btn {
      animation: float 3s ease-in-out infinite;
    }
    @keyframes float {
      0%, 100% { transform: translateY(0); }
      50% { transform: translateY(-10px); }
    }
  </style>
</head>
<body class="bg-gray-50 font-sans leading-relaxed">

  <!-- Header -->
  <header class="bg-white shadow-sm relative">
    <div class="max-w-5xl mx-auto px-4 py-4 flex justify-between items-center">
      <h1 class="text-xl font-bold text-gray-800 hidden md:block">Course Details</h1>
      
      <!-- Tutor Info in Header -->
      <div class="flex items-center space-x-3 cursor-pointer" onclick="openTutorModal()">
        <img src="/<%= tutor.image %>" alt="<%= tutor.name %>" class="w-10 h-10 rounded-full object-cover border-2 border-blue-500">
        <span class="font-medium text-gray-800"><%= tutor.name %></span>
      </div>
    </div>

    <!-- Top-right Dashboard button -->
    <div class="absolute top-4 right-4">
      <a href="/dash" class="bg-gradient-to-r from-blue-500 to-indigo-600 text-white px-5 py-2 rounded-lg shadow hover:from-blue-600 hover:to-indigo-700 transition duration-200">
        üè† Dashboard
      </a>
    </div>
  </header>

  <!-- Flash Messages -->
  <div class="max-w-5xl mx-auto px-4 mt-4">
    <% if (success && success.length > 0) { %>
      <div class="bg-green-100 text-green-800 border border-green-300 px-4 py-3 rounded-lg mb-4">
        <%= success[0] %>
      </div>
    <% } %>
    <% if (error && error.length > 0) { %>
      <div class="bg-red-100 text-red-800 border border-red-300 px-4 py-3 rounded-lg mb-4">
        <%= error[0] %>
      </div>
    <% } %>
  </div>

  <div class="max-w-5xl mx-auto py-8 px-4">
    <!-- Course Header -->
    <div class="bg-white rounded-xl shadow-md overflow-hidden mb-8">
      <div class="relative">
        <img src="/<%= course.thumbnail %>" class="w-full h-64 object-cover" alt="Course Thumbnail">
        <div class="absolute inset-0 bg-gradient-to-t from-black to-transparent opacity-70"></div>
        <div class="absolute bottom-4 left-6 text-white">
          <h1 class="text-3xl font-bold mb-1"><%= course.courseTitle %></h1>
          <p class="text-gray-200"><%= course.shortDescription %></p>
        </div>
        <div class="absolute top-4 right-4">
          <span class="bg-blue-100 text-blue-800 text-xs font-semibold px-2.5 py-0.5 rounded">Active</span>
        </div>
      </div>

      <!-- Course Details -->
      <div class="p-6">
        <h2 class="text-xl font-semibold mb-4 text-gray-800 flex items-center">
          <i class="fas fa-info-circle text-blue-500 mr-2"></i> About This Course
        </h2>
        <p class="text-gray-700 mb-6 leading-relaxed"><%= course.detailedDescription %></p>
        
        <!-- Course Rating Summary -->
        <div class="bg-gray-50 p-4 rounded-lg mb-4">
          <div class="flex flex-col md:flex-row items-center">
            <div class="text-center md:text-left md:mr-8 mb-4 md:mb-0">
              <div class="text-4xl font-bold text-gray-800"><%= averageRating || '0.0' %></div>
              <div class="flex justify-center md:justify-start my-1">
                <% for(let i = 1; i <= 5; i++) { %>
                  <% if (i <= Math.floor(averageRating || 0)) { %>
                    <i class="fas fa-star text-yellow-500"></i>
                  <% } else if (i === Math.ceil(averageRating || 0) && (averageRating || 0) % 1 !== 0) { %>
                    <i class="fas fa-star-half-alt text-yellow-500"></i>
                  <% } else { %>
                    <i class="far fa-star text-yellow-500"></i>
                  <% } %>
                <% } %>
              </div>
              <p class="text-sm text-gray-600"><%= ratings.length %> ratings</p>
            </div>
            <div class="flex-1 w-full">
              <% 
                const ratingDistribution = {5: 0, 4: 0, 3: 0, 2: 0, 1: 0};
                if (ratings && ratings.length > 0) {
                  ratings.forEach(rating => {
                    if (rating.rating >= 1 && rating.rating <= 5) {
                      ratingDistribution[rating.rating]++;
                    }
                  });
                }
                const totalRatings = ratings.length || 1;
              %>
              <% for(let i = 5; i >= 1; i--) { %>
                <div class="flex items-center mb-1">
                  <span class="text-sm text-gray-600 w-8"><%= i %> <i class="fas fa-star text-yellow-500"></i></span>
                  <div class="flex-1 bg-gray-200 rounded-full h-2 mx-2">
                    <%
                      const ratingCount = ratingDistribution[i];
                      const percentage = totalRatings > 0 ? (ratingCount / totalRatings) * 100 : 0;
                    %>
                    <div class="bg-yellow-500 h-2 rounded-full rating-bar" style="width: <%= percentage %>%"></div>
                  </div>
                  <span class="text-sm text-gray-600 w-8"><%= ratingCount %></span>
                </div>
              <% } %>
            </div>
          </div>
        </div>
      </div>
    </div>

    <!-- Videos Section -->
    <div class="flex flex-col md:flex-row gap-8">
      <!-- Video List -->
      <div class="w-full md:w-1/3">
        <div class="bg-white rounded-xl shadow-md p-5 sticky top-6">
          <h2 class="text-xl font-semibold mb-4 text-gray-800 flex items-center">
            <i class="fas fa-play-circle text-blue-500 mr-2"></i> Course Content
          </h2>
          <p class="text-sm text-gray-600 mb-4"><%= course.videos.length %> lessons</p>
          
          <div class="overflow-y-auto max-h-96">
            <% course.videos.forEach((video, index) => { %>
              <div class="video-item mb-3 p-3 rounded-lg border border-gray-200 cursor-pointer hover:bg-blue-50 transition <%= index === 0 ? 'active-video' : '' %>" 
                   data-index="<%= index %>" 
                   data-path="/<%= video.videoPath %>" 
                   data-title="<%= video.title %>">
                <div class="flex items-start">
                  <div class="bg-blue-100 text-blue-800 rounded-full w-8 h-8 flex items-center justify-center mr-3 mt-1">
                    <span class="text-sm font-semibold"><%= index + 1 %></span>
                  </div>
                  <div class="flex-1">
                    <h3 class="font-medium text-gray-800 text-sm mb-1"><%= video.title %></h3>
                    <div class="flex items-center text-xs text-gray-500">
                      <i class="far fa-clock mr-1"></i> <%= video.duration || 'No duration' %>
                      <span class="mx-2">‚Ä¢</span>
                      <i class="far fa-play-circle mr-1"></i> Video
                    </div>
                  </div>
                </div>
              </div>
            <% }) %>
          </div>
        </div>
      </div>

      <!-- Video Player & Reviews Section -->
      <div class="w-full md:w-2/3">
        <!-- Video Player -->
        <div class="bg-white rounded-xl shadow-md overflow-hidden">
          <div class="bg-black w-full h-[400px] flex items-center justify-center">
            <video id="mainPlayer" controls class="w-full h-full object-contain">
              <source src="/<%= course.videos[0].videoPath %>" type="video/mp4">
              Your browser does not support the video tag.
            </video>
          </div>
          
          <div class="p-6">
            <h2 id="currentVideoTitle" class="text-2xl font-bold text-gray-800 mb-2"><%= course.videos[0].title %></h2>
            <p id="currentVideoDescription" class="text-gray-600 mb-6">Now watching: <%= course.videos[0].title %></p>
            
            <div class="flex justify-between items-center border-t pt-4">
              <button id="prevBtn" class="bg-gray-100 text-gray-800 px-4 py-2 rounded-lg font-medium hover:bg-gray-200 transition flex items-center disabled:opacity-50 disabled:cursor-not-allowed" disabled>
                <i class="fas fa-arrow-left mr-2"></i> Previous
              </button>
              
              <button id="nextBtn" class="bg-blue-600 text-white px-4 py-2 rounded-lg font-medium hover:bg-blue-700 transition flex items-center <%= course.videos.length <= 1 ? 'disabled:opacity-50 disabled:cursor-not-allowed' : '' %>">
                Next <i class="fas fa-arrow-right ml-2"></i>
              </button>
            </div>
          </div>
        </div>

        <!-- Feedback and Rating Section -->
        <div class="bg-white rounded-xl shadow-md p-6 mt-8">
          <h2 class="text-xl font-semibold mb-6 text-gray-800 flex items-center">
            <i class="fas fa-comments text-blue-500 mr-2"></i> Student Feedback & Reviews
          </h2>

          <!-- Reviews List -->
          <div id="reviewsContainer">
            <% if (ratings && ratings.length > 0) { %>
              <h3 class="text-lg font-semibold text-gray-800 mb-4">
                Student Reviews (<%= ratings.length %>)
              </h3>
              <% ratings.forEach((rating, index) => { %>
                <div class="border-b border-gray-200 pb-6 mb-6 last:border-0 last:mb-0">
                  <div class="flex justify-between items-start mb-2">
                    <div class="flex items-center">
                      <div class="w-10 h-10 bg-blue-100 rounded-full flex items-center justify-center mr-3">
                        <span class="text-blue-800 font-semibold"><%= rating.userName ? rating.userName.charAt(0).toUpperCase() : 'U' %></span>
                      </div>
                      <div>
                        <h4 class="font-medium text-gray-800"><%= rating.userName || 'Anonymous User' %></h4>
                        <div class="flex items-center">
                          <div class="flex mr-2">
                            <% for(let i = 1; i <= 5; i++) { %>
                              <% if (i <= rating.rating) { %>
                                <i class="fas fa-star text-yellow-500 text-sm"></i>
                              <% } else { %>
                                <i class="far fa-star text-yellow-500 text-sm"></i>
                              <% } %>
                            <% } %>
                          </div>
                          <span class="text-sm text-gray-500"><%= new Date(rating.createdAt).toLocaleDateString('en-US', { year:'numeric', month:'long', day:'numeric'}) %></span>
                        </div>
                      </div>
                    </div>
                  </div>
                  <% if (rating.review) { %>
                    <p class="text-gray-700 mt-2 leading-relaxed"><%= rating.review %></p>
                  <% } else { %>
                    <p class="text-gray-500 italic mt-2">No written review</p>
                  <% } %>
                </div>
              <% }) %>
            <% } else { %>
              <div class="text-center py-8">
                <i class="fas fa-comment-slash text-gray-400 text-4xl mb-3"></i>
                <p class="text-gray-500 text-lg mb-2">No reviews yet</p>
                <p class="text-gray-400">Be the first to share your experience with this course!</p>
              </div>
            <% } %>
          </div>
        </div>
      </div>
    </div>
  </div>

  <!-- Floating Rating Button -->
  <% if (user) { %>
    <div class="fixed bottom-6 right-6 z-50">
      <button 
        id="floatingRatingBtn"
        class="floating-btn bg-blue-600 hover:bg-blue-700 text-white w-14 h-14 rounded-full shadow-lg flex items-center justify-center transition-all duration-300 hover:scale-110"
        title="Rate this course"
      >
        <i class="fas fa-star text-xl"></i>
      </button>
    </div>

    <!-- Rating Modal -->
    <div id="ratingModal" class="fixed inset-0 bg-black bg-opacity-50 flex items-center justify-center z-50 hidden">
      <div class="bg-white rounded-2xl shadow-xl max-w-md w-full mx-4 max-h-[90vh] overflow-y-auto">
        <div class="flex items-center justify-between p-6 border-b border-gray-200">
          <h3 class="text-xl font-semibold text-gray-800">Rate this course</h3>
          <button id="closeRatingModal" class="text-gray-400 hover:text-gray-600 transition-colors">
            <i class="fas fa-times text-xl"></i>
          </button>
        </div>

        <form id="ratingForm" action="/courses/<%= course._id %>/rate" method="POST" class="p-6">
          <div class="mb-6">
            <label class="block text-sm font-medium text-gray-700 mb-3">Your Rating <span class="text-red-500">*</span></label>
            <div class="star-rating flex justify-center" id="modalStarRating">
              <input type="radio" id="modalStar5" name="rating" value="5" required>
              <label for="modalStar5" title="Excellent" class="cursor-pointer mx-1">
                <i class="fas fa-star text-3xl text-gray-300 transition-colors"></i>
              </label>
              <input type="radio" id="modalStar4" name="rating" value="4">
              <label for="modalStar4" title="Very Good" class="cursor-pointer mx-1">
                <i class="fas fa-star text-3xl text-gray-300 transition-colors"></i>
              </label>
              <input type="radio" id="modalStar3" name="rating" value="3">
              <label for="modalStar3" title="Good" class="cursor-pointer mx-1">
                <i class="fas fa-star text-3xl text-gray-300 transition-colors"></i>
              </label>
              <input type="radio" id="modalStar2" name="rating" value="2">
              <label for="modalStar2" title="Fair" class="cursor-pointer mx-1">
                <i class="fas fa-star text-3xl text-gray-300 transition-colors"></i>
              </label>
              <input type="radio" id="modalStar1" name="rating" value="1">
              <label for="modalStar1" title="Poor" class="cursor-pointer mx-1">
                <i class="fas fa-star text-3xl text-gray-300 transition-colors"></i>
              </label>
            </div>
            <div id="modalRatingText" class="text-center text-sm text-gray-600 mt-3 hidden">
              <span id="modalSelectedRating" class="font-semibold">0</span> stars - <span id="modalRatingDescription" class="text-blue-600"></span>
            </div>
          </div>

          <div class="mb-6">
            <label for="modalReview" class="block text-sm font-medium text-gray-700 mb-2">Your Review (Optional)</label>
            <textarea 
              id="modalReview" 
              name="review" 
              rows="4" 
              class="w-full px-4 py-3 border border-gray-300 rounded-xl focus:outline-none focus:ring-2 focus:ring-blue-500 focus:border-blue-500 transition-all resize-none"
              placeholder="Share your experience with this course..."
            ></textarea>
            <div class="flex justify-between items-center mt-2">
              <p class="text-xs text-gray-500">Maximum 1000 characters</p>
              <span id="modalCharCount" class="text-xs text-gray-500">0/1000</span>
            </div>
          </div>

          <div class="flex space-x-3">
            <button type="button" id="cancelRating" class="flex-1 bg-gray-100 text-gray-700 px-4 py-3 rounded-xl font-medium hover:bg-gray-200 transition-colors">
              Cancel
            </button>
            <button type="submit" id="modalSubmitRatingBtn" class="flex-1 bg-blue-600 text-white px-4 py-3 rounded-xl font-medium hover:bg-blue-700 transition-colors disabled:opacity-50 disabled:cursor-not-allowed flex items-center justify-center" disabled>
              <i class="fas fa-paper-plane mr-2"></i> Submit
            </button>
          </div>
        </form>
      </div>
    </div>
  <% } else { %>
    <!-- Floating Login Button -->
    <div class="fixed bottom-6 right-6 z-50">
      <button 
        id="floatingLoginBtn"
        class="floating-btn bg-yellow-500 hover:bg-yellow-600 text-white w-14 h-14 rounded-full shadow-lg flex items-center justify-center transition-all duration-300 hover:scale-110"
        title="Login to rate this course"
      >
        <i class="fas fa-sign-in-alt text-xl"></i>
      </button>
    </div>

    <!-- Login Modal -->
    <div id="loginModal" class="fixed inset-0 bg-black bg-opacity-50 flex items-center justify-center z-50 hidden">
      <div class="bg-white rounded-2xl shadow-xl max-w-sm w-full mx-4">
        <div class="p-6 text-center">
          <div class="text-yellow-500 mb-4">
            <i class="fas fa-exclamation-circle text-4xl"></i>
          </div>
          <h3 class="text-xl font-semibold text-gray-800 mb-2">Login Required</h3>
          <p class="text-gray-600 mb-6">Please login to rate this course and share your experience.</p>
          <div class="flex space-x-3">
            <button id="closeLoginModal" class="flex-1 bg-gray-100 text-gray-700 px-4 py-3 rounded-xl font-medium hover:bg-gray-200 transition-colors">
              Cancel
            </button>
            <a href="/login" class="flex-1 bg-blue-600 text-white px-4 py-3 rounded-xl font-medium hover:bg-blue-700 transition-colors text-center">
              Login
            </a>
          </div>
        </div>
      </div>
    </div>
  <% } %>

  <!-- Tutor Modal -->
  <div id="tutorModal" class="fixed inset-0 bg-black bg-opacity-50 flex items-center justify-center z-50 hidden">
    <div class="bg-white rounded-xl p-6 max-w-sm w-full relative mx-4">
      <button class="absolute top-2 right-2 text-gray-500 text-xl hover:text-gray-700 transition" onclick="closeTutorModal()">&times;</button>
      <div class="flex flex-col items-center">
        <img src="/<%= tutor.image %>" alt="<%= tutor.name %>" class="w-32 h-32 rounded-full object-cover mb-4 border-4 border-blue-500">
        <h3 class="text-xl font-semibold text-gray-800 mb-2"><%= tutor.name %></h3>
        <p class="text-gray-600 text-center mb-4">Course Instructor</p>
        <button onclick="window.location.href='/messages/<%= tutor._id %>'" 
                class="bg-blue-500 text-white px-6 py-2 rounded-lg hover:bg-blue-600 transition w-full">
          <i class="fas fa-envelope mr-2"></i> Message Tutor
        </button>
      </div>
    </div>
  </div>

  <script>
    function openTutorModal() { document.getElementById('tutorModal').classList.remove('hidden'); }
    function closeTutorModal() { document.getElementById('tutorModal').classList.add('hidden'); }

    document.addEventListener('DOMContentLoaded', function() {
      // Video elements
      const videoItems = document.querySelectorAll('.video-item');
      const mainPlayer = document.getElementById('mainPlayer');
      const currentVideoTitle = document.getElementById('currentVideoTitle');
      const currentVideoDescription = document.getElementById('currentVideoDescription');
      const prevBtn = document.getElementById('prevBtn');
      const nextBtn = document.getElementById('nextBtn');
      
      // Floating rating elements
      const floatingRatingBtn = document.getElementById('floatingRatingBtn');
      const ratingModal = document.getElementById('ratingModal');
      const closeRatingModal = document.getElementById('closeRatingModal');
      const cancelRating = document.getElementById('cancelRating');
      const floatingLoginBtn = document.getElementById('floatingLoginBtn');
      const loginModal = document.getElementById('loginModal');
      const closeLoginModal = document.getElementById('closeLoginModal');
      const ratingForm = document.getElementById('ratingForm');
      const modalStarRating = document.getElementById('modalStarRating');
      const modalRatingText = document.getElementById('modalRatingText');
      const modalSelectedRating = document.getElementById('modalSelectedRating');
      const modalRatingDescription = document.getElementById('modalRatingDescription');
      const modalSubmitRatingBtn = document.getElementById('modalSubmitRatingBtn');
      const modalReviewTextarea = document.getElementById('modalReview');
      const modalCharCount = document.getElementById('modalCharCount');

      let currentVideoIndex = 0;

      function updateVideoPlayer() {
        const activeItem = videoItems[currentVideoIndex];
        const videoPath = activeItem.getAttribute('data-path');
        const videoTitle = activeItem.getAttribute('data-title');
        
        // Update UI
        currentVideoTitle.textContent = videoTitle;
        currentVideoDescription.textContent = "Now watching: " + videoTitle;
        prevBtn.disabled = currentVideoIndex === 0;
        nextBtn.disabled = currentVideoIndex === videoItems.length - 1;
        
        // Load video directly
        mainPlayer.src = videoPath;
        mainPlayer.load();
      }

      function updateActiveVideo() {
        videoItems.forEach(v => v.classList.remove('active-video'));
        videoItems[currentVideoIndex].classList.add('active-video');
      }

      // Video navigation
      videoItems.forEach((item, index) => {
        item.addEventListener('click', () => {
          currentVideoIndex = index;
          updateActiveVideo();
          updateVideoPlayer();
        });
      });

      prevBtn.addEventListener('click', () => {
        if (currentVideoIndex > 0) { 
          currentVideoIndex--; 
          updateActiveVideo(); 
          updateVideoPlayer(); 
        }
      });

      nextBtn.addEventListener('click', () => {
        if (currentVideoIndex < videoItems.length - 1) { 
          currentVideoIndex++; 
          updateActiveVideo(); 
          updateVideoPlayer(); 
        }
      });

      // Floating rating functionality
      const ratingDescriptions = {
        1: 'Poor - Needs significant improvement',
        2: 'Fair - Has some issues',
        3: 'Good - Meets expectations',
        4: 'Very Good - Exceeds expectations',
        5: 'Excellent - Outstanding quality'
      };

      // Open Rating Modal
      if (floatingRatingBtn) {
        floatingRatingBtn.addEventListener('click', () => {
          ratingModal.classList.remove('hidden');
          document.body.style.overflow = 'hidden';
        });
      }

      // Close Rating Modal
      function closeRatingModalFunc() {
        ratingModal.classList.add('hidden');
        document.body.style.overflow = 'auto';
      }

      if (closeRatingModal) closeRatingModal.addEventListener('click', closeRatingModalFunc);
      if (cancelRating) cancelRating.addEventListener('click', closeRatingModalFunc);

      // Open Login Modal
      if (floatingLoginBtn) {
        floatingLoginBtn.addEventListener('click', () => {
          loginModal.classList.remove('hidden');
          document.body.style.overflow = 'hidden';
        });
      }

      // Close Login Modal
      function closeLoginModalFunc() {
        loginModal.classList.add('hidden');
        document.body.style.overflow = 'auto';
      }

      if (closeLoginModal) closeLoginModal.addEventListener('click', closeLoginModalFunc);

      // Close modals when clicking outside
      document.addEventListener('click', (e) => {
        if (e.target === ratingModal) closeRatingModalFunc();
        if (e.target === loginModal) closeLoginModalFunc();
      });

      // Close modals with Escape key
      document.addEventListener('keydown', (e) => {
        if (e.key === 'Escape') {
          closeRatingModalFunc();
          closeLoginModalFunc();
        }
      });

      // Modal Star Rating Interaction
      if (modalStarRating) {
        const stars = modalStarRating.querySelectorAll('input[type="radio"]');
        const starLabels = modalStarRating.querySelectorAll('label');

        stars.forEach(star => {
          star.addEventListener('change', (e) => {
            const value = parseInt(e.target.value);
            modalSelectedRating.textContent = value;
            modalRatingDescription.textContent = ratingDescriptions[value];
            modalRatingText.classList.remove('hidden');
            modalSubmitRatingBtn.disabled = false;

            // Update star colors
            starLabels.forEach((label, index) => {
              const starValue = 5 - index;
              const icon = label.querySelector('i');
              if (starValue <= value) {
                icon.classList.remove('text-gray-300');
                icon.classList.add('text-yellow-400');
              } else {
                icon.classList.remove('text-yellow-400');
                icon.classList.add('text-gray-300');
              }
            });
          });
        });

        // Hover effects
        starLabels.forEach((label, index) => {
          label.addEventListener('mouseenter', () => {
            const hoverValue = 5 - index;
            starLabels.forEach((l, i) => {
              const starValue = 5 - i;
              const icon = l.querySelector('i');
              if (starValue <= hoverValue) {
                icon.classList.add('text-yellow-300');
              }
            });
          });

          label.addEventListener('mouseleave', () => {
            starLabels.forEach(l => {
              const icon = l.querySelector('i');
              icon.classList.remove('text-yellow-300');
            });
          });
        });
      }

      // Character counter for modal
      if (modalReviewTextarea && modalCharCount) {
        modalReviewTextarea.addEventListener('input', function() {
          const count = this.value.length;
          modalCharCount.textContent = `${count}/1000`;
          
          if (count > 1000) {
            modalCharCount.classList.add('text-red-500');
          } else {
            modalCharCount.classList.remove('text-red-500');
          }
        });
      }

      // Form submission loading state
      if (ratingForm) {
        ratingForm.addEventListener('submit', function(e) {
          const ratingValue = this.querySelector('input[name="rating"]:checked');
          if (!ratingValue) {
            e.preventDefault();
            alert('Please select a rating before submitting.');
            return;
          }
          
          // Show loading state
          modalSubmitRatingBtn.innerHTML = '<i class="fas fa-spinner fa-spin mr-2"></i> Submitting...';
          modalSubmitRatingBtn.disabled = true;
        });
      }

      // Initialize first video
      updateVideoPlayer();
    });

    // Global event listeners
    document.addEventListener('click', function(e) {
      const tutorModal = document.getElementById('tutorModal');
      if (e.target === tutorModal) closeTutorModal();
    });

    document.addEventListener('keydown', function(e) {
      if (e.key === 'Escape') closeTutorModal();
    });
  </script>

  <style>
    .star-rating input {
      display: none;
    }
    
    .star-rating label i {
      transition: all 0.2s ease-in-out;
    }
    
    .star-rating label:hover i {
      transform: scale(1.1);
    }
    
    /* Smooth modal animations */
    #ratingModal, #loginModal {
      animation: fadeIn 0.3s ease-out;
    }
    
    @keyframes fadeIn {
      from { opacity: 0; }
      to { opacity: 1; }
    }
  </style>
</body>
</html>